syntax = "proto3";

package dialog;

import "scalapb/scalapb.proto";
import "google/api/annotations.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

enum AuthorizationMethod {
    AUTHORIZATION_METHOD_NOTHING = 0;
    AUTHORIZATION_METHOD_USERNAME = 1;
    AUTHORIZATION_METHOD_PHONE = 2;
    AUTHORIZATION_METHOD_EMAIL = 3;
    AUTHORIZATION_METHOD_CERTIFICATE = 4;
    AUTHORIZATION_METHOD_OAUTH = 5;
}

message RequestRegisterDevice {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    bytes client_pk = 1;
    int32 app_id = 2;
    string app_title = 3;
    string device_title = 4;
}

message ResponseDeviceRequest {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    bytes server_pk = 1;
    int64 auth_id = 2;
    string token = 3;
    repeated AuthorizationMethod auth_method_seq = 4; /// Sequence of the required authorization methods
}

message RegisterDeprecatedDeviceRequest {}

message RequestExchangeAuthIdForToken {
  int64 auth_id = 1;
  bytes signature = 2;
}

service Registration {
  rpc ExchangeAuthIdForToken (RequestExchangeAuthIdForToken) returns (ResponseDeviceRequest) {
    option (google.api.http) = {
        post: "/v1/grpc/Registration/ExchangeAuthIdForToken"
        body: "*"
    };
  }
  /// register device to get auth token
  rpc RegisterDevice (RequestRegisterDevice) returns (ResponseDeviceRequest) {
      option (google.api.http) = {
          post: "/v1/grpc/Registration/RegisterDevice"
          body: "*"
      };
  }
  // deprecated
  rpc RegisterDeprecatedDevice (RegisterDeprecatedDeviceRequest) returns (ResponseDeviceRequest) {
      option (google.api.http) = {
          post: "/v1/grpc/Registration/RegisterDeprecatedDevice"
          body: "*"
      };
  }

}
