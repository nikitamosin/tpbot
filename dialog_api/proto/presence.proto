syntax = "proto3";

package dialog;


import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "definitions.proto";
import "miscellaneous.proto";
import "peers.proto";
import "scalapb/scalapb.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

enum TypingType {
    TYPINGTYPE_UNKNOWN = 0;
    TYPINGTYPE_TEXT = 1;
    TYPINGTYPE_VOICE = 2;
}

// Sending typing notification
message RequestStartTyping {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    OutPeer peer = 1 [(dlg).log="visible"];
    reserved 2;
    TypingType typing_type = 3 [(dlg).log="visible"];
    reserved 4;
}

// Stop typing
message RequestStopTyping {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    OutPeer peer = 1 [(dlg).log="visible"];
    TypingType typing_type = 2 [(dlg).log="visible"];
}

enum DeviceType {
    DEVICETYPE_UNKNOWN = 0;
    DEVICETYPE_GENERIC = 1;
    DEVICETYPE_PC = 2;
    DEVICETYPE_MOBILE = 3;
    DEVICETYPE_TABLET = 4;
    DEVICETYPE_WATCH = 5;
    DEVICETYPE_MIRROR = 6;
    DEVICETYPE_CAR = 7;
    DEVICETYPE_TABLE = 8;
}

// Sending online state
message RequestSetOnline {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    bool is_online = 1 [(dlg).log="visible"];
    int64 timeout = 2 [(dlg).log="visible"]; /// offline after timeout
    DeviceType device_type = 3 [(dlg).log="visible"];
    reserved 4;
}

// Update about user's typing
message UpdateTyping {
    Peer peer = 1 [(dlg).log="visible"];
    int32 user_id = 2 [(dlg).log="visible"];
    TypingType typing_type = 3 [(dlg).log="visible"];
}

// Update about user's typing stop
message UpdateTypingStop {
    Peer peer = 1 [(dlg).log="visible"];
    int32 user_id = 2 [(dlg).log="visible"];
    TypingType typing_type = 3 [(dlg).log="hidden"];
}

// Update about user became online
message UpdateUserOnline {
    int32 user_id = 1 [(dlg).log="visible"];
    DeviceType device_type = 2;
    reserved 3;
}

// Update about user became offline
message UpdateUserOffline {
    int32 uid = 1 [(dlg).log="visible"];
    DeviceType device_type = 2;
    reserved 3;
}

// Update about user's last seen state
message UpdateUserLastSeen {
    int32 uid = 1 [(dlg).log="visible"];
    int64 last_seen_at = 2 [(dlg).log="visible"];
    DeviceType device_type = 3;
    reserved 4;
    int64 current_time = 5 [(dlg).log="visible"];
}

// Update about group online change
message UpdateGroupOnline {
    int32 group_id = 1 [(dlg).log="visible"];
    /// amount of online users.
    int32 count = 2 [(dlg).log="visible"];
    /// The list of online users will only be sent if the flag was set during the subscription.
    repeated int32 users_id = 3 [(dlg).log="visible"];
}

message UpdateGroupTyping {
    message UserTyping {
        int32 user_id = 1 [(dlg).log="visible"];
        TypingType typing_type = 2 [(dlg).log="visible"];
    }

    int32 group_id = 1 [(dlg).log="visible"];
    repeated UserTyping users_typing = 2 [(dlg).log="visible"];
}

// Request for last user online timestamp
message RequestGetUserLastPresence {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    UserOutPeer user_out_peer = 1 [(dlg).log="visible"];
}

// Response for RequestGetUserLastPresence
message ResponseUserLastPresence {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    message UserNotFoundError {}
    oneof payload {
        google.protobuf.Timestamp last_online_at = 1;
        UserNotFoundError not_found_error = 2;
    }
}

service Presence {
    rpc StartTyping (RequestStartTyping) returns (ResponseVoid) {
        option (google.api.http) = {
            post: "/v1/grpc/Presence/StartTyping"
            body: "*"
        };
    }
    rpc StopTyping (RequestStopTyping) returns (ResponseVoid) {
        option (google.api.http) = {
            post: "/v1/grpc/Presence/StopTyping"
            body: "*"
        };
    }
    rpc SetOnline (RequestSetOnline) returns (ResponseVoid) {
        option (google.api.http) = {
            post: "/v1/grpc/Presence/SetOnline"
            body: "*"
        };
    }
    rpc GetUserLastPresence (RequestGetUserLastPresence) returns (ResponseUserLastPresence) {
        option (google.api.http) = {
            post: "/v1/grpc/Presence/GetUserLastPresence"
            body: "*"
        };
    }
}
