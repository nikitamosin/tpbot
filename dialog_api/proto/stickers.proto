syntax = "proto3";

package dialog;

// Stickers support in Actor

import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "definitions.proto";
import "miscellaneous.proto";
import "media_and_files.proto";
import "scalapb/scalapb.proto";

option go_package = "dialog";
option java_package = "im.dlg.grpc.services";

// Descriptor of a Sticker
message StickerDescriptor {
    int32 id = 1 [(dlg).log="visible"]; /// Sticker unique id
    /// Emoji code for sticker
    google.protobuf.StringValue emoji = 2 [(dlg).log="visible"];
    /// Image of sticker 128x128 in WebP format
    ImageLocation image_128 = 3 [(dlg).log="visible", (dlg).required=true];
    /// Image of sticker 512x512 in WebP format
    ImageLocation image_512 = 4 [(dlg).log="visible"];
    /// Image of sticker 256x256 in WebP format
    ImageLocation image_256 = 5 [(dlg).log="visible"];
    /// Animated sticker json payload
    google.protobuf.StringValue animatedStickerJson = 6 [(dlg).log="visible"];
}

// Sticker collection
message StickerCollection {
    /// Unique id of a collection
    int32 id = 1 [(dlg).log="visible"];
    /// Sticker pack title
    google.protobuf.StringValue title = 2 [(dlg).log="visible"];
    repeated StickerDescriptor stickers = 3 [(dlg).log="visible"];
    /// does this pack belongs to current user
    google.protobuf.BoolValue owned_by_me = 4 [(dlg).log="visible"];
    int64 clock = 5 [(dlg).log="visible"];
}

// Stickers response
message ResponseStickersResponse {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated StickerCollection collections = 1 [(dlg).log="visible"];
    int32 seq = 2 [(dlg).log="visible"]; /// deprecated
    bytes state = 3 [(dlg).log="visible"];
    repeated StickerCollection removed_collections = 4 [(dlg).log="visible"];
    int64 clock = 5 [(dlg).log="visible"];
    int64 prev_clock = 6 [(dlg).log="visible"];
}

// Loading own stickers
message RequestLoadOwnStickers {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int64 from_clock = 1 [(dlg).log="visible"];
}

message ResponseLoadOwnStickers {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated StickerCollection own_stickers = 1;
    repeated StickerCollection removed_collections = 2 [(dlg).log="visible"];
    int64 clock = 3 [(dlg).log="visible"];
    int64 prev_clock = 4 [(dlg).log="visible"];
}

// Load accessible stickers
message RequestLoadAcesssibleStickers {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int64 from_clock = 1 [(dlg).log="visible"];
}

message ResponseLoadAcesssibleStickers {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    repeated StickerCollection accessible_stickers = 1;
    repeated StickerCollection removed_collections = 2 [(dlg).log="visible"];
    int64 clock = 3 [(dlg).log="visible"];
    int64 prev_clock = 4 [(dlg).log="visible"];
}

// Add a reference to other user's sticker pack
message RequestAddStickerPackReference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int32 source_sticker_pack = 1 [(dlg).log="visible"];
}

// Remove a reference to an other user's sticker pack
message RequestRemoveStickerPackReference {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int32 source_sticker_pack = 1 [(dlg).log="visible"];
}

// Sticker collection changed
message UpdateStickerCollectionsChanged {
    repeated StickerCollection updated_collections = 1 [(dlg).log="visible"];
}

// Sticker pack removed
message UpdateStickerPackRemoved {
    int32 pack_id = 1 [(dlg).log="visible"];
}

// Sticker pack was added
message UpdateStickerPackAdded {
    StickerCollection pack = 1 [(dlg).log="visible"];
}

// Adding sticker collection
message RequestAddStickerCollection {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    string title = 1 [(dlg).log="visible"];
}

// Removing sticker collection
message RequestRemoveStickerCollection {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int32 id = 1 [(dlg).log="visible"];
}

// Loading stickers
message RequestLoadStickerCollection {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcRequest";
    int32 id = 1 [(dlg).log="visible"];
}

message ResponseLoadStickerCollection {
    option (scalapb.message).extends = "im.dlg.grpc.GrpcResponse";
    StickerCollection collection = 1;
}

service Stickers {
    rpc LoadOwnStickers (RequestLoadOwnStickers) returns (ResponseLoadOwnStickers) {
        option (google.api.http) = {
            post: "/v1/grpc/Stickers/LoadOwnStickers"
            body: "*"
        };
    }
    rpc LoadAcesssibleStickers (RequestLoadAcesssibleStickers) returns (ResponseLoadAcesssibleStickers) {
        option (google.api.http) = {
            post: "/v1/grpc/Stickers/LoadAcesssibleStickers"
            body: "*"
        };
    }
    rpc AddStickerPackReference (RequestAddStickerPackReference) returns (ResponseSeq) {
        option (google.api.http) = {
            post: "/v1/grpc/Stickers/AddStickerPackReference"
            body: "*"
        };
    }
    rpc RemoveStickerPackReference (RequestRemoveStickerPackReference) returns (ResponseSeq) {
        option (google.api.http) = {
            post: "/v1/grpc/Stickers/RemoveStickerPackReference"
            body: "*"
        };
    }
    rpc AddStickerCollection (RequestAddStickerCollection) returns (ResponseSeq) {
        option (google.api.http) = {
            post: "/v1/grpc/Stickers/AddStickerCollection"
            body: "*"
        };
    }
    rpc RemoveStickerCollection (RequestRemoveStickerCollection) returns (ResponseSeq) {
        option (google.api.http) = {
            post: "/v1/grpc/Stickers/RemoveStickerCollection"
            body: "*"
        };
    }
    rpc LoadStickerCollection (RequestLoadStickerCollection) returns (ResponseLoadStickerCollection) {
        option (google.api.http) = {
            post: "/v1/grpc/Stickers/LoadStickerCollection"
            body: "*"
        };
    }
}
